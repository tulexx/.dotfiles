#!/usr/bin/env bash

RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m'

message() {
  local msg=${1}
  local type=${2:-warning}
  if [ "$type" == "error" ]
    echo -e "${RED}${msg}${NC}"
  then
  else
  fi
    exit 1;
}

commands=( docker tmux tmuxinator aaa )

for cmd in "${commands[@]}"
do
  if ! type "$cmd" &> /dev/null
  then
    error
  fi
done

echo dupa


start_env() {
  tmuxinator="${HOME}/.tmuxinator"
  name=${1}
  file="${tmuxinator}/${name}.yml"

  if [[ -z ${name} ]]
  then
    echo -e "${RED}You need to pass a name variable${NC}"
    return 1;
  fi

  if [[ ! -e ${file} ]]
  then
    create_tmuxinator ${name}
  fi

  tmuxinator ${name}
}

function stop_env {
  name=${1}
  docker=${2}

  if [[ -z ${name} ]]
  then
    echo -e "${RED}You need to pass a name variable${NC}"
    return 1;
  fi

  if [[ ${docker} = true ]] || [[ ${docker} = 1 ]]
  then
    docker stop $(docker ps -aqf name="${name}")
  fi

  if tmux ls | grep -q ${name}
  then
    tmux kill-session -t ${name}
  fi
}

function create_tmuxinator {
  tmuxinator="${HOME}/.tmuxinator"
  newFile=${tmuxinator}/${1}.yml
  counter=0;
  array=()

  for yml in $(ls ${tmuxinator}/*.yml)
  do
    array+=($yml)
    echo -e "[${YELLOW}${counter}${NC}] ${yml}" | sed -e "s@${tmuxinator}/@@"
    counter=$((counter+1))
  done

  read -p "Choose base file: " baseFile
  file=${array[${baseFile}]}

  cp ${file} ${newFile}
  editor ${newFile}
}
